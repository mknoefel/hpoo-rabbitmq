<?xml version="1.0" encoding="UTF-8"?>

<!--
 ~ Copyright (c) 2010-2011 Sonatype, Inc.
 ~ All rights reserved. This program and the accompanying materials
 ~ are made available under the terms of the Eclipse Public License v1.0
 ~ and Apache License v2.0 which accompanies this distribution.
 ~ The Eclipse Public License is available at
 ~   http://www.eclipse.org/legal/epl-v10.html
 ~ The Apache License v2.0 is available at
 ~   http://www.apache.org/licenses/LICENSE-2.0.html
 ~ You may elect to redistribute this code under either of these licenses.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.sisu.inject</groupId>
    <artifactId>guice-plexus</artifactId>
    <version>2.1.1</version>
  </parent>

  <artifactId>guice-plexus-binders</artifactId>

  <name>Guice - Plexus binders</name>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-bean-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-bean-inject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-bean-scanners</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-bean-locators</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-bean-binders</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-plexus-metadata</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-plexus-scanners</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-plexus-converters</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-plexus-locators</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-old-annotations</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.codehaus.plexus</groupId>
                  <artifactId>plexus-component-annotations</artifactId>
                  <version>1.2.1</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <executions>
          <execution>
            <id>remove-missing-class</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>${project.build.testOutputDirectory}</directory>
                  <includes>
                    <include>**/*MissingClass.class</include>
                  </includes>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
